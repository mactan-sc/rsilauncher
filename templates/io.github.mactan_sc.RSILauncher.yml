id: io.github.mactan_sc.RSILauncher
runtime: org.gnome.Platform
runtime-version: &runtime-version '48'
x-gl-version: &gl-version "1.4"
x-gl-versions: &gl-versions 24.08;24.08-extra;1.4
x-gl-merge-dirs: &gl-merge-dirs vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d;vulkan/implicit_layer.d
sdk: org.gnome.Sdk
sdk-extensions:
  - org.gnome.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
command: rsi-run
separate-locales: false
finish-args:
# pressure vessel
  - --device=all
  - --env=PATH=/app/bin:/app/utils/bin:/usr/bin:/usr/lib/extensions/vulkan/MangoHud/bin:/usr/lib/extensions/vulkan/gamescope/bin:/usr/lib/extensions/vulkan/OBSVkCapture/bin:/app/bin/heroic/resources/app.asar.unpacked/build/bin/linux
  - --env=LD_LIBRARY_PATH=/usr/lib/extensions/vulkan/gamescope/lib
  - --persist=Games
  - --persist=.local
  - --filesystem=xdg-run/gamescope-0:rw
  # See: https://github.com/flathub/com.valvesoftware.Steam/commit/0538256facdb0837c33232bc65a9195a8a5bc750
  - --env=XDG_DATA_DIRS=/app/share:/usr/lib/extensions/vulkan/share:/usr/share:/usr/share/runtime/share:/run/host/user-share:/run/host/share:/usr/lib/pressure-vessel/overrides/share
  - --allow=per-app-dev-shm
  # umu
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --share=network
  - --allow=devel
  - --allow=multiarch
  - --talk-name=org.freedesktop.Notifications
  - --talk-name=org.freedesktop.Flatpak
  - --filesystem=xdg-data/icons:create
  - --filesystem=xdg-run/app/com.discordapp.Discord
  - --filesystem=xdg-run/discord-ipc-0
  - --filesystem=xdg-config/MangoHud:ro

add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: "46"

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: "46"
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: *gl-merge-dirs
    download-if: active-gl-driver
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.GL32.Debug:
    directory: lib/debug/lib/i386-linux-gnu/GL
    version: *gl-version
    versions: *gl-versions
    subdirectories: true
    no-autodownload: true
    merge-dirs: *gl-merge-dirs
    enable-if: active-gl-driver
    autoprune-unless: active-gl-driver

  org.freedesktop.Platform.VAAPI.Intel.i386:
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: *runtime-version
    versions: *runtime-version
    autodelete: false
    no-autodownload: true
    add-ld-path: lib
    download-if: have-intel-gpu
    autoprune-unless: have-intel-gpu

modules:
  - name: platform-bootstrap
    buildsystem: simple
    build-commands:
      - |
        set -e
        mkdir -p /app/bin
        mkdir -p /app/lib/i386-linux-gnu
        mkdir -p /app/lib/i386-linux-gnu/GL
        mkdir -p /app/lib/i386-linux-gnu/dri/intel-vaapi-driver
        mkdir -p /app/lib/debug/lib/i386-linux-gnu
        mkdir -p /app/lib/debug/lib/i386-linux-gnu/GL
        install -Dm644 -t /app/etc ld.so.conf
        mkdir -p /app/lib{,32}/ffmpeg
        mkdir -p /app/share/steam/compatibilitytools.d
        mkdir -p /app/utils /app/share/vulkan
        ln -srv /app/{utils/,}share/vulkan/explicit_layer.d
        ln -srv /app/{utils/,}share/vulkan/implicit_layer.d
        mkdir -p /app/links/lib
        ln -srv /app/lib /app/links/lib/x86_64-linux-gnu
        ln -srv /app/lib32 /app/links/lib/i386-linux-gnu
    sources:
      - type: inline
        dest-filename: ld.so.conf
        contents: |
          # We just make any GL32 extension have higher priority
          include /run/flatpak/ld.so.conf.d/app-*-org.freedesktop.Platform.GL32.*.conf
          /app/lib32
          /app/lib/i386-linux-gnu
          /lib64

  # These are needed for window management inside gamescope
  - name: python-flit-core # needed by idna
    buildsystem: simple
    build-commands:
      - pip3 install --no-index --no-build-isolation --prefix="${FLATPAK_DEST}" .
    cleanup: ["*"]
    sources:
      - type: archive
        url: https://files.pythonhosted.org/packages/c4/e6/c1ac50fe3eebb38a155155711e6e864e254ce4b6e17fe2429b4c4d5b9e80/flit_core-3.9.0.tar.gz
        sha256: 72ad266176c4a3fcfab5f2930d76896059851240570ce9a98733b658cb786eba

  # --- umu ---
  - name: umu-run
    buildsystem: simple
    build-commands:
      - |
        install umu-run /app/bin/umu-run
    sources:
      - type: archive
        url: https://github.com/Open-Wine-Components/umu-launcher/releases/download/${UMU_LAUNCHER_VERSION}/umu-launcher-${UMU_LAUNCHER_VERSION}-zipapp.tar
        sha256: ${UMU_LAUNCHER_VERSION_SHA256}
    modules:
      - name: rsi-launcher
        buildsystem: simple
        build-commands:
          - mkdir -p /app/lib/i386-linux-gnu/GL
          - mkdir -p /app/lib/debug/lib/i386-linux-gnu
          - mkdir -p /app/bin
          - install -Dm644 io.github.mactan_sc.RSILauncher.desktop /app/share/applications/io.github.mactan_sc.RSILauncher.desktop
          - install -Dm644 io.github.mactan_sc.RSILauncher.metainfo.xml /app/share/metainfo/io.github.mactan_sc.RSILauncher.metainfo.xml
          - install -Dm644 RSI-Launcher.png /app/share/icons/hicolor/256x256/apps/io.github.mactan_sc.RSILauncher.png
        sources:
          - type: file
            path: io.github.mactan_sc.RSILauncher.desktop
          - type: file
            path: io.github.mactan_sc.RSILauncher.metainfo.xml
          - type: file
            path: icons/256/RSI-Launcher.png
      - name: constants
        buildsystem: simple
        build-commands:
          - install constants.sh /app/constants.sh
        sources:
          - type: file
            path: scripts/constants.sh
      - name: config
        buildsystem: simple
        build-commands:
          - install launcher.cfg /app/launcher.cfg
        sources:
          - type: file
            path: launcher.cfg
      - name: launch-script
        buildsystem: simple
        build-commands:
          - mkdir -p /app/bin
          - install rsi-run /app/bin/rsi-run
        sources:
          - type: file
            dest-filename: rsi-run
            path: scripts/rsi-run.sh
      - name: control-script
        buildsystem: simple
        build-commands:
          - mkdir -p /app/bin
          - install control /app/bin/control
        sources:
          - type: file
            dest-filename: control
            path: scripts/control.sh
      - name: winecfg-script
        buildsystem: simple
        build-commands:
          - mkdir -p /app/bin
          - install winecfg /app/bin/winecfg
        sources:
          - type: file
            dest-filename: winecfg
            path: scripts/winecfg.sh
      - name: maintenance-script
        buildsystem: simple
        build-commands:
          - mkdir -p /app/bin
          - install maintenance /app/bin/rsi-maintenance
          - install -Dm644 io.github.mactan_sc.RSILauncher.maintenance.desktop /app/share/applications/io.github.mactan_sc.RSILauncher.maintenance.desktop
          - install -Dm644 RSI-Launcher-Maintenance.png /app/share/icons/hicolor/256x256/apps/io.github.mactan_sc.RSILauncher.maintenance.png
        sources:
          - type: file
            dest-filename: maintenance
            path: scripts/rsi-maintenance.sh
          - type: file
            path: io.github.mactan_sc.RSILauncher.maintenance.desktop
          - type: file
            path: icons/256/RSI-Launcher-Maintenance.png
      - name: zenity
        buildsystem: meson
        sources:
          - type: archive
            url: https://download.gnome.org/sources/zenity/4.1/zenity-4.1.90.tar.xz
            sha256: bf3679c6205ff48dcebd1e1dff3a3a4a6a0b3a53e1cbc3b098a9ec0b62bd7236

